{"ast":null,"code":"var _jsxFileName = \"/Users/chieftain/webdev/FSW135/Rock_The_Vote/client/src/components/auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../context/UserProvider.js\";\nimport AuthForm from \"./authForm.js\";\nconst initInputs = {\n  username: \"\",\n  password: \"\"\n};\nexport default function Auth() {\n  const [inputs, setInputs] = useState(initInputs);\n  const [toggle, setToggle] = useState(false);\n  const {\n    signup,\n    login,\n    errMsg,\n    resetAuthErr\n  } = useContext(UserContext);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prevInputs => ({ ...prevInputs,\n      [name]: value\n    }));\n  }\n\n  function handleSignup(e) {\n    e.preventDefault();\n    signup(inputs);\n  }\n\n  function handleLogin(e) {\n    e.preventDefault();\n    login(inputs);\n  }\n\n  function toggleForm() {\n    setToggle(prev => !prev);\n    resetAuthErr();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Todo App\"), !toggle ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AuthForm, {\n    handleChange: handleChange,\n    handleSubmit: handleSignup,\n    inputs: inputs,\n    btnText: \"Sign up\",\n    errMsg: errMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Already a member?\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AuthForm, {\n    handleChange: handleChange,\n    handleSubmit: handleLogin,\n    inputs: inputs,\n    btnText: \"Login\",\n    errMsg: errMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Not a member?\")));\n}","map":{"version":3,"sources":["/Users/chieftain/webdev/FSW135/Rock_The_Vote/client/src/components/auth.js"],"names":["React","useState","useContext","UserContext","AuthForm","initInputs","username","password","Auth","inputs","setInputs","toggle","setToggle","signup","login","errMsg","resetAuthErr","handleChange","e","name","value","target","prevInputs","handleSignup","preventDefault","handleLogin","toggleForm","prev"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,MAAMC,UAAU,GAAG;AAAEC,EAAAA,QAAQ,EAAE,EAAZ;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAnB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACI,UAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA;AAAzB,MAA0Cd,UAAU,CAACC,WAAD,CAA1D;;AAEA,WAASc,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAX,IAAAA,SAAS,CAAEY,UAAD,KAAiB,EACzB,GAAGA,UADsB;AAEzB,OAACH,IAAD,GAAQC;AAFiB,KAAjB,CAAD,CAAT;AAID;;AAED,WAASG,YAAT,CAAsBL,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACM,cAAF;AACAX,IAAAA,MAAM,CAACJ,MAAD,CAAN;AACD;;AAED,WAASgB,WAAT,CAAqBP,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,KAAK,CAACL,MAAD,CAAL;AACD;;AAED,WAASiB,UAAT,GAAsB;AACpBd,IAAAA,SAAS,CAAEe,IAAD,IAAU,CAACA,IAAZ,CAAT;AACAX,IAAAA,YAAY;AACb;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,CAACL,MAAD,gBACC,uDACE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAEM,YADhB;AAEE,IAAA,YAAY,EAAEM,YAFhB;AAGE,IAAA,MAAM,EAAEd,MAHV;AAIE,IAAA,OAAO,EAAC,SAJV;AAKE,IAAA,MAAM,EAAEM,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAG,IAAA,OAAO,EAAEW,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,CADD,gBAYC,uDACE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAET,YADhB;AAEE,IAAA,YAAY,EAAEQ,WAFhB;AAGE,IAAA,MAAM,EAAEhB,MAHV;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,MAAM,EAAEM,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAG,IAAA,OAAO,EAAEW,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,CAdJ,CADF;AA4BD","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../context/UserProvider.js\";\nimport AuthForm from \"./authForm.js\";\n\nconst initInputs = { username: \"\", password: \"\" };\n\nexport default function Auth() {\n  const [inputs, setInputs] = useState(initInputs);\n  const [toggle, setToggle] = useState(false);\n\n  const { signup, login, errMsg, resetAuthErr } = useContext(UserContext);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((prevInputs) => ({\n      ...prevInputs,\n      [name]: value,\n    }));\n  }\n\n  function handleSignup(e) {\n    e.preventDefault();\n    signup(inputs);\n  }\n\n  function handleLogin(e) {\n    e.preventDefault();\n    login(inputs);\n  }\n\n  function toggleForm() {\n    setToggle((prev) => !prev);\n    resetAuthErr();\n  }\n\n  return (\n    <div className=\"auth-container\">\n      <h1>Todo App</h1>\n      {!toggle ? (\n        <>\n          <AuthForm\n            handleChange={handleChange}\n            handleSubmit={handleSignup}\n            inputs={inputs}\n            btnText=\"Sign up\"\n            errMsg={errMsg}\n          />\n          <p onClick={toggleForm}>Already a member?</p>\n        </>\n      ) : (\n        <>\n          <AuthForm\n            handleChange={handleChange}\n            handleSubmit={handleLogin}\n            inputs={inputs}\n            btnText=\"Login\"\n            errMsg={errMsg}\n          />\n          <p onClick={toggleForm}>Not a member?</p>\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}